; TextPad 4.0 Syntax file for COMM Lisp
; submitted by Guillaume SIMARD, 14 october 2002
; simardgu@etu.utc.fr

C=1

[Syntax]
Namespace1 = 6
IgnoreCase = Yes
BracketChars = ()
InitKeyWordChars = A-Za-z_\-
KeyWordChars = A-Za-z0-9_\-
OperatorChars = -+*/\<>^&=
PreprocStart =
SyntaxStart =
SyntaxEnd =
CommentStart = #|
CommentEnd = |#
CommentStartAlt = 
CommentEndAlt = 
SingleComment = ;
SingleCommentAlt = 
SingleCommentCol =
StringStart = "
StringEnd = "
StringAlt = 
StringEsc =
CharStart =
CharEnd = 
CharEsc =


;;;;;;; Keywords

;1 		FUNCTIONS & GENERIC FUNCTIONS
;2 		TYPE & SPECIAL FORM
;3 		VARIABLES
;4 		CONSTANTS
;5 		MACROS
;6 		LOOP CLAUSE




; FUNCTIONS 
; RE: (.*)\x20(function$) par \1  &  .*\x20+.*
[Keywords 1]
*
+
-
/
1+
1-
<
<=
=
>
>=
abort
abs
acons
acos
acosh
adjoin
adjust-array
adjustable-array-p
alpha-char-p
alphanumericp
alter
append
apply
applyhook
apropos
apropos-list
aref
arithmetic-error-operation
arithmetic-error-operands
array-dimension
array-dimensions
array-element-type
array-has-fill-pointer-p
array-in-bounds-p
array-rank
array-row-major-index
array-total-size
arrayp
ash
asin
asinh
assoc
assoc-if
assoc-if-not
atan
atanh
atom
augment-environment
bit
bit-and
bit-andc1
bit-andc2
bit-eqv
bit-ior
bit-nand
bit-nor
bit-not
bit-orc1
bit-orc2
bit-vector-p
bit-xor
boole
both-case-p
boundp
break
broadcast-stream-streams
butlast
byte
byte-position
byte-size
caaaar
caaadr
caaar
caadar
caaddr
caadr
caar
cadaar
cadadr
cadar
caddar
cadddr
caddr
cadr
call-next-method
car
catenate
cdaaar
cdaadr
cdaar
cdadar
cdaddr
cdadr
cdar
cddaar
cddadr
cddar
cdddar
cddddr
cdddr
cddr
cdr
ceiling
cell-error-name
cerror
char
char-bit
char-bits
char-code
char-downcase
char-equal
char-font
char-greaterp
char-int
char-lessp
char-name
char-not-equal
char-not-greaterp
char-not-lessp
char-upcase
char/=
char<
char<=
char=
char>
char>=
character
characterp
choose
choose-if
chunk
cis
class-of
clear-input
close
clrhash
code-char
coerce
collect
collect-alist
collect-and
collect-append
collect-file
collect-first
collect-fn
collect-hash
collect-last
collect-length
collect-max
collect-min
collect-nconc
collect-nth
collect-or
collect-plist
collect-sum
collecting-fn
commonp
compile
compile-file
compile-file-pathname
compiled-function-p
compiler-macro-function
compiler-macroexpand-1
compiler-macroexpand
complement
complex
complexp
compute-applicable-methods
compute-restarts
concatenate
concatenated-stream-streams
conjugate
cons
consp
constantp
continue
copy-alist
copy-list
copy-pprint-dispatch
copy-readtable
copy-seq
copy-symbol
copy-tree
cos
cosh
cotruncate
count
count-if
count-if-not
declaration-information
decode-float
decode-universal-time
delete
delete-duplicates
delete-file
delete-if
delete-if-not
delete-package
denominator
deposit-field
describe
digit-char
digit-char-p
directory
directory-namestring
disassemble
documentation
dpb
dribble
echo-stream-input-stream
echo-stream-output-stream
ed
eighth
elt
enclose
encode-universal-time
endp
enough-namestring
ensure-generic-function
eq
eql
equal
equalp
error
eval
evalhook
evenp
every
exp
expand
export
expt
fboundp
fdefinition
ffloor
fifth
file-author
file-error-pathname
file-length
file-namestring
file-position
file-string-length
file-write-date
fill
fill-pointer
find
find-all-symbols
find-class
find-if
find-if-not
find-package
find-restart
find-symbol
finish-output
first
float
float-digits
float-precision
float-radix
float-sign
floatp
floor
format
fourth
funcall
function-information
function-lambda-expression
functionp
gatherer
gcd
generator
gensym
gentemp
get
get-decoded-time
get-internal-real-time
get-internal-run-time
get-output-stream-string
get-properties
get-setf-method
get-setf-method-multiple-value
get-universal-time
getf
gethash
graphic-char-p
hash-table-count
hash-table-p
hash-table-rehash-threshold
hash-table-rehash-size
hash-table-size
hash-table-test
host-namestring
identity
imagpart
import
in-package
input-stream-p
inspect
int-char
integer-decode-float
integer-length
integerp
interactive-stream-p
intern
intersection
invalid-method-error
invoke-debugger
invoke-restart
isqrt
keywordp
last
latch
lcm
ldb
ldb-test
ldiff
length
lisp-implementation-version
lisp-implementation-type
list
list*
list-all-packages
list-length
listen
listp
load
load-logical-pathname-translations
log
logand
logandc1
logandc2
logbitp
logcount
logeqv
logical-pathname-translations
logical-pathname
logior
lognand
lognor
lognot
logorc1
logorc2
logtest
logxor
long-site-name
lower-case-p
machine-instance
machine-type
machine-version
macro-function
macroexpand
macroexpand-1
make-array
make-broadcast-stream
make-char
make-concatenated-stream
make-condition
make-dispatch-macro-character
make-echo-stream
make-hash-table
make-list
make-load-form-saving-slots
make-package
make-pathname
make-random-state
make-sequence
make-string
make-string-input-stream
make-string-output-stream
make-symbol
make-synonym-stream
make-two-way-stream
makunbound
map
map-fn
map-into
mapc
mapcan
mapcar
mapcon
maphash
mapl
maplist
mask
mask-field
max
member
member-if
member-if-not
merge
merge-pathnames
method-combination-error
min
mingle
minusp
mismatch
mod
muffle-warning
name-char
namestring
nbutlast
nconc
next-method-p
next-out
nintersection
ninth
not
notany
notevery
nreconc
nreverse
nset-difference
nset-exclusive-or
nstring-capitalize
nstring-downcase
nstring-upcase
nsublis
nsubst
nsubst-if
nsubst-if-not
nsubstitute
nsubstitute-if
nsubstitute-if-not
nth
nthcdr
null
numberp
numerator
nunion
oddp
open
open-stream-p
output-stream-p
package-error-package
package-name
package-nicknames
package-shadowing-symbols
package-use-list
package-used-by-list
packagep
pairlis
parse-integer
parse-macro
parse-namestring
pathname
pathname-device
pathname-directory
pathname-host
pathname-match-p
pathname-name
pathname-type
pathname-version
pathnamep
peek-char
phase
plusp
position
position-if
position-if-not
positions
pprint-dispatch
pprint-fill
pprint-indent
pprint-linear
pprint-newline
pprint-tab
pprint-tabular
previous
prin1
probe-file
proclaim
provide
random
random-state-p
rassoc
rassoc-if
rassoc-if-not
rational
rationalize
rationalp
read
read-byte
read-char
read-char-no-hang
read-delimited-list
read-from-string
read-line
read-preserving-whitespace
readtable-case
readtablep
realp
realpart
reduce
rem
remhash
remove
remove-duplicates
remprop
rename-file
rename-package
replace
require
rest
restart-name
result-of
revappend
reverse
room
round
row-major-aref
rplaca
rplacd
sbit
scale-float
scan
scan-alist
scan-file
scan-fn
scan-fn-inclusive
scan-hash
scan-lists-of-lists-fringe
scan-lists-of-lists
scan-multiple
scan-plist
scan-range
scan-sublists
scan-symbols
schar
search
second
series
set
set-char-bit
set-difference
set-dispatch-macro-character
set-exclusive-or
set-macro-character
set-pprint-dispatch
set-syntax-from-char
seventh
shadow
shadowing-import
short-site-name
signal
signum
simple-bit-vector-p
simple-condition-format-string
simple-condition-format-arguments
simple-string-p
simple-vector-p
sin
sinh
sixth
sleep
slot-boundp
slot-exists-p
slot-makunbound
slot-value
software-type
software-version
some
sort
special-form-p
split
split-if
sqrt
stable-sort
standard-char-p
store-value
stream-element-type
stream-error-stream
stream-external-format
streamp
string
string-capitalize
string-char-p
string-downcase
string-equal
string-greaterp
string-left-trim
string-lessp
string-not-equal
string-not-greaterp
string-not-lessp
string-right-trim
string-trim
string-upcase
string/=
string<
string<=
string=
string>
string>=
stringp
sublis
subseq
subseries
subsetp
subst
subst-if
subst-if-not
substitute
substitute-if
substitute-if-not
subtypep
svref
sxhash
symbol-function
symbol-name
symbol-package
symbol-plist
symbol-value
symbolp
synonym-stream-symbol
tailp
tan
tanh
tenth
terpri
third
to-alter
translate-logical-pathname
translate-pathname
tree-equal
truename
truncate
two-way-stream-output-stream
two-way-stream-input-stream
type-error-datum
type-error-expected-type
type-of
typep
unexport
unintern
union
unread-char
until
until-if
unuse-package
upgraded-array-element-type
upgraded-complex-part-type
upper-case-p
use-package
use-value
user-homedir-pathname
values
values-list
variable-information
vector
vector-pop
vector-push
vector-push-extend
vectorp
warn
wild-pathname-p
write
write-byte
write-char
write-string
write-to-string
y-or-n-p
yes-or-no-p
zerop
add-method
arithmetic-error
cell-error
change-class
class-name
condition
control-error
describe-object
division-by-zero
documentation
end-of-file
error
f
file-error
find-method
floating-point-overflow
floating-point-underflow
function-keywords
initialize-instance
make-instance
make-instances-obsolete
make-load-form
method-qualifiers
no-applicable-method
no-next-method
package-error
print-object
program-error
reinitialize-instance
remove-method
restart
serious-condition
shared-initialize
simple-condition
simple-error
simple-type-error
simple-warning
slot-missing
slot-unbound
storage-condition
stream-error
type-error
unbound-variable
undefined-function
update-instance-for-different-class
update-instance-for-redefined-class
warning

;;;;;; GENERIC FUNCTIONS
;add-method
;arithmetic-error
;cell-error
;change-class
;class-name
;condition
;control-error
;describe-object
;division-by-zero
;documentation
;end-of-file
;error
;f
;file-error
;find-method
;floating-point-overflow
;floating-point-underflow
;function-keywords
;initialize-instance
;make-instance
;make-instances-obsolete
;make-load-form
;method-qualifiers
;no-applicable-method
;no-next-method
;package-error
;print-object
;program-error
;reinitialize-instance
;remove-method
;restart
;serious-condition
;shared-initialize
;simple-condition
;simple-error
;simple-type-error
;simple-warning
;slot-missing
;slot-unbound
;storage-condition
;stream-error
;type-error
;unbound-variable
;undefined-function
;update-instance-for-different-class
;update-instance-for-redefined-class
;warning




; TYPE & Special Form
[Keywords 2]
arithmetic-error
cell-error
condition
control-error
division-by-zero
end-of-file
error
file-error
floating-point-underflow
floating-point-overflow
package-error
program-error
restart
serious-condition
simple-condition
simple-error
simple-type-error
simple-warning
storage-condition
stream-error
type-error
unbound-variable
undefined-function
warning
;;;;;;;;;;;;;;;;;;;Special Form
block
catch
compiler-let
declare
eval-when
flet
function
generic-flet
generic-labels
go
if
let
let*
load-time-value
locally
multiple-value-call
multiple-value-prog1
progn
progv
quote
return-from
setq
symbol-macrolet
tagbody
the
throw
unwind-protect
with-added-methods





; VARIABLES
[Keywords 3]
*
**
***
*applyhook*
*break-on-signals*
*break-on-warnings*
*compile-file-pathname*
*compile-file-truename*
*compile-print*
*compile-verbose*
*debug-io*
*debugger-hook*
*default-pathname-defaults*
*error-output*
*evalhook*
*features*
*gensym-counter*
*load-pathname*
*load-print*
*load-truename*
*load-verbose*
*macroexpand-hook*
*modules*
*package*
*print-array*
*print-base*
*print-case*
*print-circle*
*print-escape*
*print-gensym*
*print-length*
*print-level*
*print-lines*
*print-miser-width*
*print-pprint-dispatch*
*print-pretty*
*print-radix*
*print-readably*
*print-right-margin*
*query-io*
*random-state*
*read-base*
*read-default-float-format*
*read-eval*
*read-suppress*
*readtable*
*standard-input*
*standard-output*
*suppress-series-warnings*
*terminal-io*
*trace-output*
+
++
+++
-
/
//
///



; CONSTANTS
[Keywords 4]
array-dimension-limit
array-rank-limit
array-total-size-limit
call-arguments-limit
char-bits-limit
char-code-limit
char-control-bit
char-font-limit
char-hyper-bit
char-meta-bit
char-super-bit
double-float-epsilon
double-float-negative-epsilon
internal-time-units-per-second
lambda-list-keywords
lambda-parameters-limit
least-negative-double-float
least-negative-long-float
least-negative-normalized-double-float
least-negative-normalized-long-float
least-negative-normalized-short-float
least-negative-normalized-single-float
least-negative-short-float
least-negative-single-float
least-positive-double-float
least-positive-long-float
least-positive-normalized-double-float
least-positive-normalized-long-float
least-positive-normalized-short-float
least-positive-normalized-single-float
least-positive-short-float
least-positive-single-float
long-float-epsilon
long-float-negative-epsilon
most-negative-double-float
most-negative-fixnum
most-negative-long-float
most-negative-short-float
most-negative-single-float
most-positive-double-float
most-positive-fixnum
most-positive-long-float
most-positive-short-float
most-positive-single-float
multiple-values-limit
nil
pi
short-float-epsilon
short-float-negative-epsilon
single-float-epsilon
single-float-negative-epsilon
t


; MACROS
[Keywords 5]
and
assert
assert
call-method
case
ccase
ccase
check-type
check-type
compiler-let
cond
ctypecase
ctypecase
decf
declaim
defclass
defgeneric
define-compiler-macro
define-condition
define-declaration
define-method-combination
define-modify-macro
define-setf-method
defmacro
defmethod
defpackage
defstruct
deftype
defun
defvar
destructuring-bind
do
do*
do-all-symbols
do-external-symbols
do-symbols
dolist
dotimes
ecase
ecase
encapsulated
etypecase
etypecase
formatter
gathering
generic-function
handler-bind
handler-case
ignore-errors
in-package
incf
iterate
locally
loop
loop-finish
mapping
multiple-value-bind
multiple-value-list
multiple-value-setq
next-in
nth-value
or
pop
pprint-exit-if-list-exhausted
pprint-logical-block
pprint-pop
print-unreadable-object
producing
prog
prog*
prog1
prog2
psetf
psetq
push
pushnew
remf
restart-bind
restart-case
return
rotatef
setf
shiftf
step
terminate-producing
time
trace
typecase
unless
untrace
when
with-accessors
with-compilation-unit
with-condition-restarts
with-hash-table-iterator
with-input-from-string
with-open-file
with-open-stream
with-output-to-string
with-package-iterator
with-simple-restart
with-slots
with-standard-io-syntax



; LOOP CLAUSE
[Keywords 6]
always
append
appending
as
collect
collecting
count
counting
do
doing
finally
for
if
initially
maximize
maximizing
minimize
minimizing
named
nconc
nconcing
never
repeat
return
sum
summing
thereis
unless
until
when
while
with


[Preprocessor keywords]
